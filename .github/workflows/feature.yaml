name: Deploy Feature Branch

on:
  workflow_dispatch:
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # Your GCP project ID
  REGION: australia-southeast1                 # Region for Cloud Run
  ARTIFACT_REGISTRY_REPO: carelybay-app              # Artifact Registry repository name
  IMAGE_NAME: carelybay-frontend                               # Name of the container image
  # CLOUD_RUN_SERVICE: carelybay-frontend       # Name of the Cloud Run service


jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    environment: dev  # Define your environment name here
    if: startsWith(github.ref, 'refs/heads/feature/')
    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker
        run: gcloud auth configure-docker ${{env.REGION}}-docker.pkg.dev

      - name: Prepare Docker tag
        id: determine_tag
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}  # Extracts branch name from ref
          TAG=$(echo "${BRANCH}" | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "CLOUD_RUN_SERVICE=carelybay-frontend-dev" >> $GITHUB_OUTPUT

      # Build the Docker image with the appropriate tag
      - name: Build Docker image
        env:
          MONGODB_URL: mongodb+srv://arbazqureshi2310:jaxCvVQDr7DsgFlu@cluster0.9klt9il.mongodb.net
        run: |
          docker build --network host --build-arg MONGODB_URL="mongodb+srv://arbazqureshi2310:jaxCvVQDr7DsgFlu@cluster0.9klt9il.mongodb.net" -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.determine_tag.outputs.TAG }} .

      # Push the Docker image to Google Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.determine_tag.outputs.TAG }}

      # Deploy the image to Cloud Run (main branch is Test env)
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ steps.determine_tag.outputs.CLOUD_RUN_SERVICE }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.determine_tag.outputs.TAG }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated
